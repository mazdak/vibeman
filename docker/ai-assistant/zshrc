# Vibeman AI Container - Zsh Configuration

# Oh My Zsh configuration
export ZSH="$HOME/.oh-my-zsh"

# Theme with good git integration
ZSH_THEME="agnoster"

# Plugins
plugins=(
    git
    docker
    docker-compose
    fzf
    zsh-autosuggestions
    zsh-syntax-highlighting
    zsh-completions
    colored-man-pages
    command-not-found
    extract
    sudo
    history
)

# Load Oh My Zsh
source $ZSH/oh-my-zsh.sh

# User configuration

# Preferred editor
export EDITOR='vim'
export VISUAL='vim'

# Language settings
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# Path additions
export PATH="$HOME/.local/bin:$PATH"

# FZF configuration
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_ALT_C_COMMAND='fd --type d --hidden --follow --exclude .git'
export FZF_DEFAULT_OPTS='
  --height 60%
  --layout=reverse
  --border
  --inline-info
  --preview "([[ -f {} ]] && (bat --style=numbers --color=always {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200"
  --preview-window=right:50%:wrap
  --bind="ctrl-/:toggle-preview"
'

# Aliases - Navigation
alias ws='cd /workspace'
alias logs='cd /logs'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# Aliases - Enhanced ls
alias ls='exa --group-directories-first'
alias l='exa -la --group-directories-first'
alias ll='exa -la --group-directories-first'
alias lt='exa --tree --level=2'

# Aliases - Git
alias g='git'
alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias gl='git log --oneline --graph --decorate --all'
alias gp='git pull'
alias gpu='git push'
alias gco='git checkout'
alias gcb='git checkout -b'
alias gcm='git commit -m'
alias ga='git add'
alias gaa='git add --all'

# Aliases - Log viewing
alias ltail='tail -f /logs/*.log'
alias lerror='rg -i "error|exception|fail" /logs/'
alias lwatch='watch -n 1 "ls -la /logs/ | tail -20"'
alias lgrep='rg --no-heading --color=always'

# Aliases - Docker
alias d='docker'
alias dc='docker-compose'
alias dps='docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"'
alias dlogs='docker logs -f'

# Aliases - File operations
alias cat='bat'
alias grep='rg'
alias find='fd'
alias vim='vim -p'  # Open files in tabs
alias v='vim'

# Functions

# Fuzzy file search and edit
vf() {
    local files
    files=$(fzf --multi --preview 'bat --style=numbers --color=always {}') || return
    [ -n "$files" ] && vim $files
}

# Ripgrep with file selection
rgf() {
    local file
    local query="${1:-}"
    [ -z "$query" ] && echo "Usage: rgf <search-pattern>" && return 1
    
    file=$(rg -l "$query" | fzf --preview "rg --color=always -C 3 '$query' {}") || return
    [ -n "$file" ] && vim "$file" +/"$query"
}

# Quick log search
log-search() {
    local query="${1:-}"
    [ -z "$query" ] && echo "Usage: log-search <pattern>" && return 1
    
    rg "$query" /logs/ --color=always | fzf --ansi
}

# Service connection test
check-service() {
    local service=$1
    local port=$2
    
    if [ -z "$service" ] || [ -z "$port" ]; then
        echo "Usage: check-service <service-name> <port>"
        return 1
    fi
    
    echo -n "Checking $service:$port... "
    if nc -zv -w 2 $service $port 2>&1 | grep -q succeeded; then
        echo "✓ Connected"
    else
        echo "✗ Connection failed"
    fi
}

# Interactive container logs
dlogs-select() {
    local container
    container=$(docker ps --format "{{.Names}}" | fzf --preview 'docker logs --tail 50 {}')
    [ -n "$container" ] && docker logs -f "$container"
}

# Git branch fuzzy switch
gco-fzf() {
    local branch
    branch=$(git branch -a | grep -v HEAD | fzf | sed 's/.*\///' | sed 's/^[* ]*//')
    [ -n "$branch" ] && git checkout "$branch"
}

# Find and cd to directory
fdd() {
    local dir
    dir=$(fd --type d --hidden --follow --exclude .git | fzf --preview 'tree -C {} | head -50')
    [ -n "$dir" ] && cd "$dir"
}

# Extract any archive
extract() {
    if [ -z "$1" ]; then
        echo "Usage: extract <archive>"
        return 1
    fi
    
    case $1 in
        *.tar.bz2) tar xjf $1 ;;
        *.tar.gz) tar xzf $1 ;;
        *.tar.xz) tar xJf $1 ;;
        *.bz2) bunzip2 $1 ;;
        *.rar) unrar e $1 ;;
        *.gz) gunzip $1 ;;
        *.tar) tar xf $1 ;;
        *.tbz2) tar xjf $1 ;;
        *.tgz) tar xzf $1 ;;
        *.zip) unzip $1 ;;
        *.Z) uncompress $1 ;;
        *.7z) 7z x $1 ;;
        *) echo "'$1' cannot be extracted" ;;
    esac
}

# Create directory and cd into it
mkcd() {
    mkdir -p "$1" && cd "$1"
}

# Search process and kill
fkill() {
    local pid
    pid=$(ps aux | sed 1d | fzf -m | awk '{print $2}')
    
    if [ -n "$pid" ]; then
        echo "$pid" | xargs kill -${1:-9}
    fi
}

# History search with fzf (better than Ctrl+R)
fh() {
    local cmd
    cmd=$(history | fzf +s --tac | sed 's/ *[0-9]* *//')
    [ -n "$cmd" ] && eval "$cmd"
}

# Auto-suggestions configuration
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#666666"
ZSH_AUTOSUGGEST_STRATEGY=(history completion)

# Key bindings
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^P' history-substring-search-up
bindkey '^N' history-substring-search-down

# Load local customizations if they exist
[ -f ~/.zshrc.local ] && source ~/.zshrc.local

# Welcome message
echo "╔══════════════════════════════════════════════════════════════╗"
echo "║           Welcome to Vibeman AI Container! 🚀                ║"
echo "╠══════════════════════════════════════════════════════════════╣"
echo "║ Workspace: /workspace                                        ║"
echo "║ Logs:      /logs                                             ║"
echo "║ Help:      cat ~/.claude/CLAUDE.md                           ║"
echo "╚══════════════════════════════════════════════════════════════╝"
echo ""
echo "Quick tips:"
echo "  • Use 'vf' for fuzzy file search and edit"
echo "  • Use 'rgf <pattern>' to search and open files"
echo "  • Use 'check-service <name> <port>' to test connections"
echo "  • Press Ctrl+R for fuzzy command history search"
echo ""